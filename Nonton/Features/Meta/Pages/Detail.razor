@page "/detail/{type}/{id}"


<PageTitle>@(ContentMeta is null ? "Nonton" : $"{ContentMeta?.Name} ({@ContentMeta?.Year})")</PageTitle>

@if (ContentMeta is not null)
{
    <div class="-m-4">
        <div class="flex flex-col w-full h-screen object-cover bg-top bg-no-repeat p-4 justify-between bg-cover"
         style="background-image: url('@ContentMeta.Poster!.Replace("small", "large")');">
            <div class="-m-4 p-4 h-64 bg-gradient-to-b from-slate-900 to-transparent w-screen flex flex-col gap-y-20">
                <img src="@ContentMeta.Logo" class="object-cover" />
                @if (!string.IsNullOrWhiteSpace(ContentMeta?.TrailerStreams?.FirstOrDefault()?.YtId))
                {
                    @if (!IsTrailerPlaying)
                    {
                        <div class="mx-auto">
                            <button class="rounded-full border-solid border-2 border-teal-500 p-3" @onclick="PlayTrailer">
                                <svg xmlns="http://www.w3.org/2000/svg" class="text-teal-500 drop-shadow-xl" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                    <path d="M7 4v16l13 -8z" />
                                </svg>
                            </button>
                        </div>
                    }
                    else
                    {
                        <iframe class="aspect-video w-full" src="@($"https://www.youtube.com/embed/{ContentMeta?.TrailerStreams?.FirstOrDefault()?.YtId}?autoplay=1")" title="Trailer" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                    }
                }
            </div>
            <div class="-m-4 p-4 h-1/2 bg-teal-100 dark:bg-slate-800 w-screen flex flex-col rounded-t-xl justify-between pb-16">
                <div class="flex flex-col gap-y-2">
                    <div class="tracking-wide">
                        @ContentMeta.Year | @ContentMeta.ImdbRating | @ContentMeta.Runtime
                    </div>
                    @if (ContentMeta.Genres is not null)
                    {
                        <div class="flex flex-row gap-2">
                            @foreach (var genre in ContentMeta.Genres)
                            {
                                <span class="px-2 py-1 bg-teal-200 text-teal-600 dark:bg-gray-600 dark:text-white rounded-xl">@genre</span>
                            }
                        </div>
                    }
                </div>
                <div class="flex flex-col tracking-wide gap-y-2">
                    <span>
                        @ContentMeta.Description
                    </span>
                    @if (ContentMeta?.Director is not null && ContentMeta.Director.Any())
                    {
                        <span>
                            Director : @string.Join(", ", ContentMeta.Director)
                        </span>
                    }
                    @if (ContentMeta?.Cast is not null && ContentMeta.Cast.Any())
                    {
                        <span>
                            Cast : @string.Join(", ", ContentMeta.Cast)
                        </span>
                    }
                </div>
                <div class="flex flex-col gap-y-1">
                    <button class="w-full bg-teal-500 text-white py-2 rounded-lg">Watch</button>
                    <button class="w-full border-solid border-2 border-teal-500 text-teal-500 py-2 rounded-lg">Select Source</button>
                </div>
            </div>
        </div>
    </div>
    <div style="display: none; background-image: url('@ContentMeta.Background'); margin: -70px -28px -85px -85px; box-shadow: inset 0 250px 250px black; height: 98vh; background-repeat: no-repeat; background-position: center; background-size: cover;">
        <div style="padding: 70px 25px 85px 85px">
            <div class="d-flex flex-column" style="align-items: center; gap: 15px">
                <MudImage Src="@ContentMeta.Logo" ObjectFit="ObjectFit.Contain" Width="400"></MudImage>
                <MudText Typo="Typo.h4" Style="display: none;">@ContentMeta?.Name</MudText>
                @if (ContentMeta.Genres is not null)
                {
                    <div class="d-flex flex-row">
                        @foreach (var genre in ContentMeta.Genres)
                        {
                            <MudChip Color="Color.Dark">@genre</MudChip>
                        }
                    </div>
                }
                <div class="d-flex flex-row">
                    <MudChip Color="Color.Dark" Icon="@Icons.Filled.CalendarToday">@ContentMeta.Year</MudChip>
                    @if (!string.IsNullOrWhiteSpace(ContentMeta.ImdbRating))
                    {
                        <MudChip Color="Color.Dark" Icon="@IconConstants.ImdbIcon">@ContentMeta.ImdbRating</MudChip>
                    }
                    @if (!string.IsNullOrWhiteSpace(ContentMeta.Runtime))
                    {
                        <MudChip Color="Color.Dark" Icon="@Icons.Filled.Watch">@ContentMeta.Runtime</MudChip>
                    }
                </div>
                <MudPaper Height="auto" Width="650px" Style="padding: 20px 20px 20px 20px; background: rgba(39, 39, 47, 0.5); backdrop-filter: blur(20px);">
                    <MudText Typo="Typo.subtitle1">@ContentMeta.Description</MudText>
                    <br />
                    <MudDivider DividerType="DividerType.FullWidth" Light="true"></MudDivider>
                    <br />
                    @if (ContentMeta?.Director is not null && ContentMeta.Director.Any())
                    {
                        <MudText Typo="Typo.subtitle1">Director : @string.Join(", ", ContentMeta.Director)</MudText>
                    }
                    @if (ContentMeta?.Cast is not null && ContentMeta.Cast.Any())
                    {
                        <MudText Typo="Typo.subtitle1">Cast : @string.Join(", ", ContentMeta.Cast)</MudText>
                    }
                </MudPaper>
                <div class="d-flex flex-row" style="gap: 10px;">
                    @if (!string.IsNullOrWhiteSpace(ContentMeta?.TrailerStreams?.FirstOrDefault()?.YtId))
                    {
                        <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Button" Color="Color.Dark" @onclick="PlayTrailer">Trailer</MudButton>
                    }
                    @if (Type == AddonConstants.TypeMovie)
                    {
                        <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Button" Color="Color.Dark" StartIcon="@Icons.Filled.PlayArrow" @onclick="() => Watch(ContentMeta!.ImdbId!)">Watch</MudButton>
                    }
                </div>
                @if (Seasons.Any())
                {
                    <div style="width: 650px; display: flex; flex-direction: column; justify-content: center; background: rgba(39, 39, 47, 0.5); backdrop-filter: blur(20px); padding: 5px 20px 20px 20px; border-radius: 10px;">
                        <MudSelect T="string" Label="Seasons" AnchorOrigin="Origin.TopCenter" @bind-Value="SelectedSeason">
                            @{
                                foreach (var season in Seasons)
                                {
                                        <MudSelectItem Value="@(season != 0 ? $"{season}" : "Special")" />
                                }
                            }
                        </MudSelect>

                        @if (!string.IsNullOrWhiteSpace(SelectedSeason))
                        {
                            <div style="max-height: 200px; overflow-y: auto">
                                @{
                                    var episodes = ContentMeta?.Videos?.Where(e => e.Season.HasValue && e.Season == (SelectedSeason.Equals("Special") ? 0 : int.Parse(SelectedSeason))).ToList();
                                    if (episodes != null && episodes.Any())
                                    {
                                            <MudExpansionPanels MultiExpansion="false">
                                                @foreach (var episode in episodes)
                                            {
                                                    <MudExpansionPanel Text="@($"{episode.Number} - {episode.Name}")">
                                                        <div class="d-flex flex-column">
                                                            <MudText Typo="Typo.subtitle2">@episode.Description</MudText>
                                                            <MudButton Variant="Variant.Filled"
                                           ButtonType="ButtonType.Button"
                                           Color="Color.Dark"
                                           StartIcon="@Icons.Filled.PlayArrow"
                                                   @onclick="() => Watch(ContentMeta!.ImdbId!, SelectedSeason, episode.Number.ToString()!)">
                                                                Watch
                                                            </MudButton>
                                                        </div>
                                                    </MudExpansionPanel>
                                            }
                                            </MudExpansionPanels>
                                    }
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
}


