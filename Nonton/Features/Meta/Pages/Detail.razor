@page "/detail/{type}/{id}"
@using Nonton.Features.Stream.Components
@using Nonton.Features.Meta.Models

<PageTitle>
    Nonton
    @if (Meta is not null)
    {
        @($"{Meta?.Name} {(!string.IsNullOrWhiteSpace(Meta?.Year) ? $"({Meta.Year})" : "")}")
    }
</PageTitle>

@if (Meta is not null)
{
    <div class="-my-4">
        <div class="flex flex-col">
            <div class="w-full h-80 object-cover bg-cover relative" style="background-image: url('@Meta.Background');">
                <div class="absolute w-full bg-gradient-to-t from-transparent to-black">
                    <button onclick="history.back();" class="m-4">
                        <svg xmlns="http://www.w3.org/2000/svg" class="inline-block mb-1" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <line x1="5" y1="12" x2="19" y2="12" />
                            <line x1="5" y1="12" x2="11" y2="18" />
                            <line x1="5" y1="12" x2="11" y2="6" />
                        </svg>
                    </button>
                </div>
                <div class="absolute flex flex-row gap-6 -bottom-2 pt-24 w-full h-1/2 text-center bg-gradient-to-b from-transparent to-gray-800">
                    <img src="@Meta.Poster" class="h-32 w-20 ml-6 -bottom-4" />
                    <div class="grid place-content-center gap-4 -mb-16">
                        <span>@Meta.Name</span>
                        <div class="text-left text-xs text-teal-500 flex flex-row gap-2 items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-star"><polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon></svg>
                            @Meta.ImdbRating
                            <div class="flex text-white ml-2 gap-4">
                                <span>
                                    &#8226;
                                </span>
                                <span>
                                    @Meta.Year
                                </span>
                                <span>
                                    &#8226;
                                </span>
                                <span>
                                    @Meta.Runtime
                                </span>
                            </div>
                        </div>
                        <div class="flex flex-row gap-4">
                            @if (Type == AddonConstants.AddonTypeMovieShortName)
                            {
                                <button class="w-full bg-teal-500 text-white py-1 rounded-lg" @onclick="ToggleSourceSelect">
                                    Watch
                                </button>
                            }
                            else if (Type == AddonConstants.AddonTypeSeriesShortName)
                            {
                                <button class="w-full bg-teal-500 text-white py-1 rounded-lg" @onclick='WatchFirstEpisode'>
                                    Watch First Episode
                                </button>
                            }

                            @{
                                var trailerSource = (Meta as MovieMeta)?.Trailers.FirstOrDefault(x => x.Type == AddonConstants.TrailerTypeTrailer).Source;
                                if (!string.IsNullOrWhiteSpace(trailerSource))
                                {
                                    <button class="p-1 rounded-lg flex flex-col place-content-center text-xs" @onclick="PlayTrailer">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mx-auto"><path d="M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"></path><polygon points="9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02"></polygon></svg>
                                        Trailer
                                    </button>
                                }
                            }

                        </div>
                    </div>
                </div>
            </div>
            <div class="pt-24 ml-4">
                <span class="text-sm text-teal-500 border-b-2 border-teal-500 p-2">
                    Overview
                </span>
                <p class="text-sm py-4 px-2 text-gray-300">
                    @Meta.Description
                </p>
                @if (Meta?.Genres is not null && Meta.Genres.Any())
                {
                    <span class="text-sm px-2 font-semibold">
                        Genre
                    </span>
                    <p class="text-sm pb-4 px-2 text-gray-300 ">
                        @string.Join(", ", Meta.Genres)
                    </p>
                }
                @if (Meta?.Director is not null && Meta.Director.Any())
                {
                    <span class="text-sm px-2 font-semibold">
                        Director
                    </span>
                    <p class="text-sm pb-4 px-2 text-gray-300 ">
                        @string.Join(", ", Meta.Director)
                    </p>
                }
                @if (Meta?.Cast is not null && Meta.Cast.Any())
                {
                    <span class="text-sm px-2 font-semibold">
                        Casts
                    </span>
                    <p class="text-sm px-2 text-gray-300">
                        @string.Join(", ", Meta.Cast)
                    </p>
                }
            </div>
            <div class="flex flex-col gap-2 pt-4 ml-4">
                @{
                    if (Meta is SeriesMeta seriesMeta)
                    {
                        <div class="flex flex-col w-28 ml-2">
                            <select class="rounded-lg p-2 text-gray-900 text-xs" @bind="SelectedSeason">
                                @foreach (var season in seriesMeta.Seasons.OrderBy(s => s.SeasonNumber))
                                {
                                    <option value="@season.SeasonNumber">@season.SeasonDescription</option>
                                }
                            </select>
                        </div>
                        <div>
                            <div class="flex flex-col relative" id="episodes">
                                @{
                                    var episodes = seriesMeta.Episodes?.Where(e => e.Season == int.Parse(SelectedSeason)).ToList();
                                    if (episodes != null && episodes.Any())
                                    {
                                        @foreach (var episode in episodes)
                                        {
                                            <div class="w-46 flex-none rounded cursor-pointer" @onclick='() => WatchEpisode(episode.Id!)'>
                                                <div class="flex flex-col place-items-center mx-2 relative">
                                                    <img data-flickity-lazyload="@episode.Thumbnail" class="h-28 aspect-video object-cover rounded-lg" />
                                                    <span class="absolute text-sm bottom-0 pb-3 pt-8 px-2 w-full text-center bg-gradient-to-b from-transparent to-black rounded-lg">
                                                        @episode.Name
                                                    </span>
                                                </div>
                                            </div>
                                        }
                                    }
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    @if (ShowSourceSelect)
    {
        <div class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true">
            <!--
              Background backdrop, show/hide based on modal state.

              Entering: "ease-out duration-300"
                From: "opacity-0"
                To: "opacity-100"
              Leaving: "ease-in duration-200"
                From: "opacity-100"
                To: "opacity-0"
            -->
            <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

            <div class="fixed inset-0 z-10 overflow-y-auto">
                <div class="flex min-h-full items-end justify-center p-4 text-center items-center p-0">
                    <!--
                      Modal panel, show/hide based on modal state.

                      Entering: "ease-out duration-300"
                        From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                        To: "opacity-100 translate-y-0 sm:scale-100"
                      Leaving: "ease-in duration-200"
                        From: "opacity-100 translate-y-0 sm:scale-100"
                        To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                    -->
                    <div class="self-end relative transform overflow-hidden rounded-t-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                        <div class="bg-slate-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                            <div class="flex place-content-center">
                                <div class="text-center sm:mt-0 sm:ml-4 sm:text-left">
                                    <h3 class="text-lg mb-4 font-medium leading-6 text-white" id="modal-title">Select Source</h3>
                                    <div class="flex flex-col gap-2 overflow-y-auto max-h-96">
                                        @if (Addons != null)
                                        {
                                            @foreach (var addon in Addons)
                                            {
                                                <StreamSourceItem Id="@Id" Addon="@addon" OnItemSelected="PlayContent"></StreamSourceItem>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="bg-slate-800 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
                            <button type="button" @onclick="ToggleSourceSelect" class="mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-transparent px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-slate-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}


