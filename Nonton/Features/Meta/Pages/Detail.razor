@page "/detail/{type}/{id}"
@using Nonton.Features.Stream.Components

<PageTitle>@(ContentMeta is null ? "Nonton" : $"{ContentMeta?.Name} ({@ContentMeta?.Year})")</PageTitle>

@if (ContentMeta is not null)
{
    <div class="-m-4">
        <div class="flex flex-col w-full h-screen object-cover bg-top bg-no-repeat p-4 justify-between bg-cover"
         style="background-image: url('@ContentMeta.Poster!.Replace("small", "large")');">
            <div class="-m-4 p-4 h-64 bg-gradient-to-b from-slate-900 to-transparent w-screen flex flex-col">
                <div>
                    <a href="@PageHistoryState.GetGoBackPage()">
                        <svg xmlns="http://www.w3.org/2000/svg" class="inline-block mb-1" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <line x1="5" y1="12" x2="19" y2="12" />
                            <line x1="5" y1="12" x2="11" y2="18" />
                            <line x1="5" y1="12" x2="11" y2="6" />
                        </svg>
                    </a>
                    <img src="@ContentMeta.Logo" class="object-cover" />
                </div>
                @if (!string.IsNullOrWhiteSpace(ContentMeta?.TrailerStreams?.FirstOrDefault()?.YtId))
                {
                    @if (!IsTrailerPlaying)
                    {
                        <div class="mx-auto mt-14">
                            <button class="rounded-full border-solid border-2 border-teal-500 p-3" @onclick="PlayTrailer">
                                <svg xmlns="http://www.w3.org/2000/svg" class="text-teal-500 drop-shadow-xl" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                    <path d="M7 4v16l13 -8z" />
                                </svg>
                            </button>
                        </div>
                    }
                    else
                    {
                        <iframe class="aspect-video w-full" src="@($"https://www.youtube.com/embed/{ContentMeta?.TrailerStreams?.FirstOrDefault()?.YtId}?autoplay=1")" title="Trailer" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                    }
                }
            </div>
            <div class="-m-4 p-4 h-1/2 bg-teal-100 dark:bg-slate-800 w-screen flex flex-col rounded-t-xl justify-between pb-16">
                <div class="flex flex-col gap-y-2">
                    <div class="tracking-wide">
                        @ContentMeta?.Year | @ContentMeta?.ImdbRating | @ContentMeta?.Runtime
                    </div>
                    @if (ContentMeta?.Genres is not null)
                    {
                        <div class="flex flex-row gap-2">
                            @foreach (var genre in ContentMeta.Genres)
                            {
                                <span class="px-2 py-1 bg-teal-200 text-teal-600 dark:bg-gray-600 dark:text-white rounded-xl">@genre</span>
                            }
                        </div>
                    }
                </div>
                <div class="flex flex-col tracking-wide gap-y-2">
                    <span>
                        @ContentMeta?.Description
                    </span>
                    @if (ContentMeta?.Director is not null && ContentMeta.Director.Any())
                    {
                        <span>
                            Director : @string.Join(", ", ContentMeta.Director)
                        </span>
                    }
                    @if (ContentMeta?.Cast is not null && ContentMeta.Cast.Any())
                    {
                        <span>
                            Cast : @string.Join(", ", ContentMeta.Cast)
                        </span>
                    }
                </div>
                <div class="flex flex-col gap-y-1">
                    <button class="w-full bg-teal-500 text-white py-2 rounded-lg" @onclick="ToggleSourceSelect">Watch</button>
                    @if (Type == AddonConstants.TypeSeries)
                    {
                        <button class="w-full border-solid border-2 border-teal-500 text-teal-500 py-2 rounded-lg">Select Episode</button>
                    }
                </div>
            </div>
        </div>
    </div>

    @if (ShowSourceSelect)
    {
        <div class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true">
            <!--
              Background backdrop, show/hide based on modal state.

              Entering: "ease-out duration-300"
                From: "opacity-0"
                To: "opacity-100"
              Leaving: "ease-in duration-200"
                From: "opacity-100"
                To: "opacity-0"
            -->
            <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

            <div class="fixed inset-0 z-10 overflow-y-auto">
                <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
                    <!--
                      Modal panel, show/hide based on modal state.

                      Entering: "ease-out duration-300"
                        From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                        To: "opacity-100 translate-y-0 sm:scale-100"
                      Leaving: "ease-in duration-200"
                        From: "opacity-100 translate-y-0 sm:scale-100"
                        To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                    -->
                    <div class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                        <div class="bg-white dark:bg-slate-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                            <div class="sm:flex sm:items-start">
                                <div class="text-center sm:mt-0 sm:ml-4 sm:text-left">
                                    <h3 class="text-lg mb-4 font-medium leading-6 text-gray-900 dark:text-white" id="modal-title">Select Source</h3>
                                    <div class="flex flex-col gap-2 overflow-y-auto max-h-96">
                                        @if (Addons != null)
                                        {
                                            @foreach (var addon in Addons)
                                            {
                                                <StreamSourceItemV2 Id="@Id" Addon="@addon"></StreamSourceItemV2>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="bg-gray-50 dark:bg-slate-800 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
                            <button type="button" @onclick="ToggleSourceSelect" class="mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-transparent px-4 py-2 text-base font-medium text-gray-700 dark:text-white shadow-sm hover:bg-slate-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}


