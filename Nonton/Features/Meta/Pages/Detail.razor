@page "/detail/{type}/{id}"


<PageTitle>@(ContentMeta is null ? "Nonton" : $"{ContentMeta?.Name} ({@ContentMeta?.Year})")</PageTitle>

@if (ContentMeta is not null)
{
    <div style="background-image: url('@ContentMeta.Background'); margin: -70px -28px -85px -85px; box-shadow: inset 0 250px 250px black; height: 98vh; background-repeat: no-repeat; background-position: center; background-size: cover;">
        <div style="padding: 70px 25px 85px 85px">
            <div class="d-flex flex-column" style="align-items: center; gap: 15px">
                <MudImage Src="@ContentMeta.Logo" ObjectFit="ObjectFit.Contain" Width="400"></MudImage>
                <MudText Typo="Typo.h4" Style="display: none;">@ContentMeta?.Name</MudText>
                @if (ContentMeta.Genres is not null)
                {
                    <div class="d-flex flex-row">
                        @foreach (var genre in ContentMeta.Genres)
                        {
                            <MudChip Color="Color.Dark">@genre</MudChip>
                        }
                    </div>
                }
                <div class="d-flex flex-row">
                    <MudChip Color="Color.Dark" Icon="@Icons.Filled.CalendarToday">@ContentMeta.Year</MudChip>
                    @if (!string.IsNullOrWhiteSpace(ContentMeta.ImdbRating))
                    {
                        <MudChip Color="Color.Dark" Icon="@IconConstants.ImdbIcon">@ContentMeta.ImdbRating</MudChip>
                    }
                    @if (!string.IsNullOrWhiteSpace(ContentMeta.Runtime))
                    {
                        <MudChip Color="Color.Dark" Icon="@Icons.Filled.Watch">@ContentMeta.Runtime</MudChip>
                    }
                </div>
                <MudPaper Height="auto" Width="650px" Style="padding: 20px 20px 20px 20px; background: rgba(39, 39, 47, 0.5); backdrop-filter: blur(20px);">
                    <MudText Typo="Typo.subtitle1">@ContentMeta.Description</MudText>
                    <br />
                    <MudDivider DividerType="DividerType.FullWidth" Light="true"></MudDivider>
                    <br />
                    @if (ContentMeta?.Director is not null && ContentMeta.Director.Any())
                    {
                        <MudText Typo="Typo.subtitle1">Director : @string.Join(", ", ContentMeta.Director)</MudText>
                    }
                    @if (ContentMeta?.Cast is not null && ContentMeta.Cast.Any())
                    {
                        <MudText Typo="Typo.subtitle1">Cast : @string.Join(", ", ContentMeta.Cast)</MudText>
                    }
                </MudPaper>
                <div class="d-flex flex-row" style="gap: 10px;">
                    @if (!string.IsNullOrWhiteSpace(ContentMeta?.TrailerStreams?.FirstOrDefault()?.YtId))
                    {
                        <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Button" Color="Color.Dark" @onclick="PlayTrailer">Trailer</MudButton>
                    }
                    @if (Type == AddonConstants.TypeMovie)
                    {
                        <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Button" Color="Color.Dark" StartIcon="@Icons.Filled.PlayArrow" @onclick="() => Watch(ContentMeta!.ImdbId!)">Watch</MudButton>
                    }
                </div>
                @if (Seasons.Any())
                {
                    <div style="width: 650px; display: flex; flex-direction: column; justify-content: center; background: rgba(39, 39, 47, 0.5); backdrop-filter: blur(20px); padding: 5px 20px 20px 20px; border-radius: 10px;">
                        <MudSelect T="string" Label="Seasons" AnchorOrigin="Origin.TopCenter" @bind-Value="SelectedSeason">
                            @{
                                foreach (var season in Seasons)
                                {
                                    <MudSelectItem Value="@(season != 0 ? $"{season}" : "Special")" />
                                }
                            }
                        </MudSelect>

                        @if (!string.IsNullOrWhiteSpace(SelectedSeason))
                        {
                            <div style="max-height: 200px; overflow-y: auto">
                                @{
                                    var episodes = ContentMeta?.Videos?.Where(e => e.Season.HasValue && e.Season == (SelectedSeason.Equals("Special") ? 0 : int.Parse(SelectedSeason))).ToList();
                                    if (episodes != null && episodes.Any())
                                    {
                                        <MudExpansionPanels MultiExpansion="false">
                                            @foreach (var episode in episodes)
                                            {
                                                <MudExpansionPanel Text="@($"{episode.Number} - {episode.Name}")">
                                                    <div class="d-flex flex-column">
                                                        <MudText Typo="Typo.subtitle2">@episode.Description</MudText>
                                                        <MudButton Variant="Variant.Filled"
                                                                   ButtonType="ButtonType.Button"
                                                                   Color="Color.Dark"
                                                                   StartIcon="@Icons.Filled.PlayArrow"
                                                                   @onclick="() => Watch(ContentMeta!.ImdbId!, SelectedSeason, episode.Number.ToString()!)">
                                                            Watch
                                                        </MudButton>
                                                    </div>
                                                </MudExpansionPanel>
                                            }
                                        </MudExpansionPanels>
                                    }
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
}


