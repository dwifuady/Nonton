@page "/detail/{type}/{id}"
@using Nonton.Features.Stream.Components
@using Nonton.Features.Meta.Models

<PageTitle>@($"{Meta?.Name} ({@Meta?.Year})")</PageTitle>

@if (Meta is not null)
{
    <div class="-m-4">
        <div class="flex flex-col">
            <div class="p-3 z-10" style="background: linear-gradient(to bottom, #000000 10%, rgb(0, 0, 0) 90%)">
                <button onclick="history.back();">
                    <svg xmlns="http://www.w3.org/2000/svg" class="inline-block mb-1" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <line x1="5" y1="12" x2="19" y2="12" />
                        <line x1="5" y1="12" x2="11" y2="18" />
                        <line x1="5" y1="12" x2="11" y2="6" />
                    </svg>
                </button>
                <span class="ml-3 text-white text-lg">@Meta.Name</span>
            </div>
            <div class="w-full h-64 object-cover bg-top bg-no-repeat justify-between bg-cover">
                <div class="w-screen max-w-lg h-24 absolute -mt-5 flex justify-end p-6" style="background: linear-gradient(to bottom, rgba(0, 0, 0, 1) 10%, rgba(0, 0, 0, 0) 90%)">
                    @if (IsTrailerPlaying)
                    {
                        <button @onclick="CloseTrailer">
                            <svg xmlns="http://www.w3.org/2000/svg" class="inline-block mb-1" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                <line x1="18" y1="6" x2="6" y2="18"/>
                                <line x1="6" y1="6" x2="18" y2="18"/>
                            </svg>
                        </button>
                    }
                </div>
                <div class="flex flex-col w-full object-cover h-60 bg-cover place-content-center" style="background-image: url('@Meta.Background');">
                    @if (Meta is MovieMeta movieMeta)
                    {
                        var trailerSource = movieMeta?.Trailers.FirstOrDefault(x => x.Type == AddonConstants.TrailerTypeTrailer).Source;
                        if (!string.IsNullOrWhiteSpace(trailerSource))
                        {
                            @if (!IsTrailerPlaying && !IsContentPlaying)
                            {
                                <div class="mx-auto">
                                    <button class="rounded-full border-solid border-2 border-teal-500 p-3" @onclick="PlayTrailer">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="text-teal-500 drop-shadow-xl" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                                            <path d="M7 4v16l13 -8z"/>
                                        </svg>
                                    </button>
                                </div>
                            }
                            else if(IsTrailerPlaying && !IsContentPlaying)
                            {
                                <div class="max-w-lg -mt-8">
                                    <iframe class="aspect-video w-full" src="@($"https://www.youtube.com/embed/{trailerSource}?autoplay=1")" title="Trailer" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                                </div>
                            }
                        }
                    }
                    @if (!IsTrailerPlaying && IsContentPlaying)
                    {
                        <div class="w-screen max-w-lg">
                            <Player Url="@ContentUrl" IsFullSizePlayer="@false"></Player>
                        </div>
                    }
                </div>
            </div>
            <div class="px-4 h-1/2 bg-slate-100 dark:bg-slate-800 flex flex-col rounded-t-xl justify-between pb-16 gap-4 mt-4">
                <div class="flex flex-col gap-y-1">
                    @if (Type == AddonConstants.TypeMovieShortName)
                    {
                        <button class="w-full bg-teal-500 text-white py-2 rounded-lg" @onclick="ToggleSourceSelect">Watch</button>
                    }
                    @if (Type == AddonConstants.TypeSeriesShortName)
                    {
                        <button class="w-full bg-teal-500 text-white py-2 rounded-lg" @onclick='WatchFirstEpisode'>Watch First Episode</button>
                    }
                </div>
                <div class="flex flex-col gap-y-2">
                    <div class="tracking-wide">
                        @if (!string.IsNullOrWhiteSpace(Meta?.ImdbRating))
                        {
                            <span>IMDB @Meta?.ImdbRating</span>
                        }
                        <br/>
                        @if (!string.IsNullOrWhiteSpace(Meta?.Year))
                        {
                            <span>@Meta?.Year | </span>
                        }
                        @if (!string.IsNullOrWhiteSpace(Meta?.Runtime))
                        {
                            <span>@Meta?.Runtime</span>
                        }
                    </div>
                    @if (Meta?.Genres is not null)
                    {
                        <div class="flex flex-row gap-2">
                            @foreach (var genre in Meta.Genres)
                            {
                                <span class="px-2 py-1 bg-teal-200 text-teal-600 dark:bg-gray-600 dark:text-white rounded-xl">@genre</span>
                            }
                        </div>
                    }
                </div>
                <div class="flex flex-col tracking-wide gap-y-2">
                    <span>
                        @Meta?.Description
                    </span>
                    @if (Meta?.Director is not null && Meta.Director.Any())
                    {
                        <span>
                            Director : @string.Join(", ", Meta.Director)
                        </span>
                    }
                    @if (Meta?.Cast is not null && Meta.Cast.Any())
                    {
                        <span>
                            Cast : @string.Join(", ", Meta.Cast)
                        </span>
                    }
                </div>
                @{
                    if (Meta is SeriesMeta seriesMeta)
                    {
                        <div class="flex flex-col w-28">
                            <select class="rounded-lg p-2 text-gray-900" @bind="SelectedSeason">
                                @foreach (var season in seriesMeta.Seasons.OrderBy(s => s.SeasonNumber))
                                {
                                    <option value="@season.SeasonNumber">@season.SeasonDescription</option>
                                }
                            </select>
                        </div>
                        <div>
                            <section class="flex no-scrollbar snap-x snap-mandatory flex-nowrap overflow-x-scroll gap-x-5" id="content-container">
                                @{
                                    var episodes = seriesMeta.Episodes?.Where(e => e.Season == int.Parse(SelectedSeason)).ToList();
                                    if (episodes != null && episodes.Any())
                                    {
                                        @foreach (var episode in episodes)
                                        {
                                            <div class="w-46 flex-none rounded snap-center snap-always cursor-pointer" @onclick='() => WatchEpisode(episode.Id!)'>
                                                <div class="flex flex-col place-items-center gap-3">
                                                    <img src="@episode.Thumbnail" class="h-28 aspect-video object-cover rounded-lg"/>
                                                    <div class="flex w-36">
                                                        <span class="text-center">@episode.Name</span>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                }
                            </section>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    @if (ShowSourceSelect)
    {
        <div class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true">
            <!--
              Background backdrop, show/hide based on modal state.

              Entering: "ease-out duration-300"
                From: "opacity-0"
                To: "opacity-100"
              Leaving: "ease-in duration-200"
                From: "opacity-100"
                To: "opacity-0"
            -->
            <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

            <div class="fixed inset-0 z-10 overflow-y-auto">
                <div class="flex min-h-full items-end justify-center p-4 text-center items-center p-0">
                    <!--
                      Modal panel, show/hide based on modal state.

                      Entering: "ease-out duration-300"
                        From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                        To: "opacity-100 translate-y-0 sm:scale-100"
                      Leaving: "ease-in duration-200"
                        From: "opacity-100 translate-y-0 sm:scale-100"
                        To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                    -->
                    <div class="self-end relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                        <div class="bg-white dark:bg-slate-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                            <div class="flex place-content-center">
                                <div class="text-center sm:mt-0 sm:ml-4 sm:text-left">
                                    <h3 class="text-lg mb-4 font-medium leading-6 text-gray-900 dark:text-white" id="modal-title">Select Source</h3>
                                    <div class="flex flex-col gap-2 overflow-y-auto max-h-96 no-scrollbar">
                                        @if (Addons != null)
                                        {
                                            @foreach (var addon in Addons)
                                            {
                                                <StreamSourceItem Id="@Id" Addon="@addon" OnItemSelected="PlayContent"></StreamSourceItem>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="bg-gray-50 dark:bg-slate-800 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
                            <button type="button" @onclick="ToggleSourceSelect" class="mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-transparent px-4 py-2 text-base font-medium text-gray-700 dark:text-white shadow-sm hover:bg-slate-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}


