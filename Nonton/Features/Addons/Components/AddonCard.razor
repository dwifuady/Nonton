@using Nonton.Features.Addons.Dtos.Manifest

<div class="bg-slate-300 dark:bg-slate-600 rounded-lg p-4">
    <div class="flex flex-row">
        @if (!string.IsNullOrWhiteSpace(Addon?.Manifest?.Logo))
        {
            <img src="@Addon?.Manifest?.Logo" class="w-14 object-contain" />
        }
        else
        {
            <div class="flex w-26 grid place-content-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="inline-block mb-1" width="60" height="60" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                    <path d="M4 7h3a1 1 0 0 0 1 -1v-1a2 2 0 0 1 4 0v1a1 1 0 0 0 1 1h3a1 1 0 0 1 1 1v3a1 1 0 0 0 1 1h1a2 2 0 0 1 0 4h-1a1 1 0 0 0 -1 1v3a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-1a2 2 0 0 0 -4 0v1a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h1a2 2 0 0 0 0 -4h-1a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1" />
                </svg>
            </div>
        }
        <div class="flex flex-col w-full pl-6">
            <div class="flex justify-between">
                <span class="text-sm font-semibold">@Addon?.Manifest?.Name <sup>@(Addon!.IsDefaultAddon ? "(Default)" : "")</sup></span>
                <div class="flex">
                    @if (Installable)
                    {
                        if (Addon?.Manifest?.BehaviorHints?.ConfigurationRequired != null &&
                        Addon.Manifest.BehaviorHints.ConfigurationRequired.Value)
                        {
                            <a href="@Addon.BaseUri" target="_blank">
                                <svg xmlns="http://www.w3.org/2000/svg" class="inline-block mb-1" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                    <path d="M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z" />
                                    <circle cx="12" cy="12" r="3" />
                                </svg>
                            </a>
                        }
                        else
                        {
                            <button @onclick="InstallAddon">
                                <svg xmlns="http://www.w3.org/2000/svg" class="inline-block mb-1" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                    <circle cx="12" cy="12" r="9" />
                                    <line x1="9" y1="12" x2="15" y2="12" />
                                    <line x1="12" y1="9" x2="12" y2="15" />
                                </svg>
                            </button>
                        }
                    }
                    @if (ShowDisableToggle)
                    {
                        <label for="status-toggle-@Addon!.Manifest!.Id" class="inline-flex relative items-center cursor-pointer">
                            @if (Enabled)
                            {
                                <input type="checkbox" checked id="status-toggle-@Addon!.Manifest!.Id" class="sr-only peer" @onchange="ToggleAddonStatus">
                            }
                            else
                            {
                                <input type="checkbox" id="status-toggle-@Addon!.Manifest!.Id" class="sr-only peer" @onchange="ToggleAddonStatus">
                            }
                            <div class="w-8 h-4 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-teal-500 dark:peer-focus:ring-teal-500 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-600 peer-checked:bg-teal-500"></div>
                            <span class="hidden ml-3 text-sm font-medium text-gray-900 dark:text-gray-300">@(_isEnabled ? "Enabled" : "Disabled")</span>
                        </label>
                    }
                    @if (Removable)
                    {
                        <button @onclick="RemoveAddon">
                            <svg xmlns="http://www.w3.org/2000/svg" class="inline-block mb-1" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                <line x1="4" y1="7" x2="20" y2="7" />
                                <line x1="10" y1="11" x2="10" y2="17" />
                                <line x1="14" y1="11" x2="14" y2="17" />
                                <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" />
                                <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" />
                            </svg>
                        </button>
                    }
                </div>
            </div>

            <div>
                <p class="text-sm">
                    @if (Addon?.Manifest?.Description?.Length > 100)
                    {
                        @Addon?.Manifest?.Description.Substring(0, 100)
                        ;
                    }
                    else
                    {
                        @Addon?.Manifest?.Description
                    }
                </p>
            </div>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public AddonDto Addon { get; set; } = null!;

    [Parameter]
    public bool Removable { get; set; }

    [Parameter]
    public bool Installable { get; set; }

    [Parameter]
    public bool ShowDisableToggle { get; set; }

    [Parameter]
    public EventCallback OnRemoved { get; set; }

    [Parameter]
    public EventCallback OnInstalled { get; set; }

    [Parameter]
    public EventCallback OnStatusToggleClicked { get; set; }

    [Parameter]
    public bool Enabled { get; set; } = true;

    private bool _isEnabled = true;

    protected override void OnParametersSet()
    {
        _isEnabled = Enabled;
    }

    public void RemoveAddon()
    {
        OnRemoved.InvokeAsync();
    }

    public void InstallAddon()
    {
        OnInstalled.InvokeAsync();
    }

    public void ToggleAddonStatus(ChangeEventArgs e)
    {
        if (e.Value is null) return;

        bool.TryParse(e.Value.ToString(), out _isEnabled);
        OnStatusToggleClicked.InvokeAsync();
    }
}
